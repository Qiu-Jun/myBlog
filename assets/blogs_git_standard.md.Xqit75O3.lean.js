import{_ as t,B as h,c as p,o as k,a5 as n,j as i,a,G as e}from"./chunks/framework.PZKd_Vnq.js";const c=JSON.parse('{"title":"代码规范化管理","description":"","frontmatter":{"title":"代码规范化管理","date":"2022-02-13T00:00:00.000Z","sidebar":true,"categories":["前端"],"tags":["前端","代码规范"],"publish":true},"headers":[],"relativePath":"blogs/git/standard.md","filePath":"blogs/git/standard.md","lastUpdated":1745916634000}'),r={name:"blogs/git/standard.md"};function d(E,s,g,F,o,y){const l=h("el-table");return k(),p("div",{"data-pagefind-body":!0},[s[13]||(s[13]=n("",2)),i("ul",null,[s[11]||(s[11]=n("",1)),i("li",null,[s[10]||(s[10]=a("Vue组件(官方文档推荐及使用遵循规则) ")),i("ul",null,[s[3]||(s[3]=i("li",null,"PascalCase (单词首字母大写命名)是最通用的声明约定",-1)),s[4]||(s[4]=i("li",null,"kebab-case (短横线分隔命名) 是最通用的使用约定",-1)),s[5]||(s[5]=i("li",null,"组件名应该始终是多个单词的，根组件 App 除外",-1)),s[6]||(s[6]=i("li",null,"有意义的名词、简短、具有可读性",-1)),s[7]||(s[7]=i("li",null,[a("命名遵循 PascalCase 约定 "),i("ul",null,[i("li",null,"公用组件以 El (公司名缩写简称) 开头，如（ElTable）"),i("li",null,"页面内部组件以组件模块名简写为开头，Item 为结尾，如（StaffBenchToChargeItem，StaffBenchAppNotArrItem）")])],-1)),i("li",null,[s[2]||(s[2]=a("使用遵循 kebab-case 约定 ")),i("ul",null,[i("li",null,[s[0]||(s[0]=a("在页面中使用组件需要前后闭合，并以短线分隔，如（")),e(l),s[1]||(s[1]=a("）"))])])]),s[8]||(s[8]=i("li",null,"导入及注册组件时，遵循 PascalCase 约定",-1)),s[9]||(s[9]=i("li",null,"必须符合自定义元素规范: 切勿使用保留字",-1))])]),s[12]||(s[12]=n("",2))]),s[14]||(s[14]=n("",37))])}const C=t(r,[["render",d]]);export{c as __pageData,C as default};
