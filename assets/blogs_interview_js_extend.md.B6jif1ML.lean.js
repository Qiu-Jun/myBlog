import{_ as k,o as p,c as t,j as h,a as s,I as a,w as n,a6 as l,D as e}from"./chunks/framework.Bna9RZrE.js";const b=JSON.parse('{"title":"Javascript继承","description":"","frontmatter":{"title":"Javascript继承","date":"2022-02-03 20:10:00","sidebar":true,"categories":["前端"],"tags":["Javascript"],"publish":false},"headers":[],"relativePath":"blogs/interview/js_extend.md","filePath":"blogs/interview/js_extend.md","lastUpdated":1740970622000}'),E={name:"blogs/interview/js_extend.md"},r=l("",5),d=l("",3),g=h("br",null,null,-1),y=l("",13);function F(c,o,C,u,B,A){const i=e("font");return p(),t("div",{"data-pagefind-body":!0},[r,h("blockquote",null,[h("p",null,[s("在子类构造函数中调用父类构造函数，可以在子类构造函数中使用"),a(i,{color:"#e54d42"},{default:n(()=>[s("call()")]),_:1}),s("和"),a(i,{color:"#e54d42"},{default:n(()=>[s("apply()")]),_:1}),s("方法。通过使用"),a(i,{color:"#e54d42"},{default:n(()=>[s("call()")]),_:1}),s("或"),a(i,{color:"#e54d42"},{default:n(()=>[s("apply()")]),_:1}),s("方法，Parent构造函数在为Child的实例创建的新对象的上下文执行了，就相当于新的Child实例对象上运行了Parent()函数中的所有初始化代码，结果就是每个实例都有自己的_data属性。")])]),d,h("blockquote",null,[h("p",null,[s("组合继承综合了"),a(i,{color:"#e54d42"},{default:n(()=>[s("原型链继承")]),_:1}),s("和"),a(i,{color:"#e54d42"},{default:n(()=>[s("借用构造函数继承")]),_:1}),s("，将两者的优点结合了起来"),g,s("就是使用原型链继承原型上的属性和方法，而通过构造函数继承实例属性，这样既可以把方法定义在原型上以实现重用，又可以让每个实例都有自己的属性")])]),y,a(i,{size:"1"},{default:n(()=>[s("[原文](https://juejin.cn/post/6914216540468576263)")]),_:1})])}const m=k(E,[["render",F]]);export{b as __pageData,m as default};
