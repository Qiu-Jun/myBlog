import{j as l,b as t,c as h,s,f as i,L as p,aa as a,G as k}from"./chunks/framework.qfYioHwX.js";const S=JSON.parse('{"title":"代码规范化管理","description":"","frontmatter":{"title":"代码规范化管理","date":"2022-02-13T00:00:00.000Z","sidebar":true,"categories":["前端"],"tags":["前端","代码规范"],"publish":true},"headers":[],"relativePath":"blogs/git/standard.md","filePath":"blogs/git/standard.md","lastUpdated":1728577001000}'),e={name:"blogs/git/standard.md"},r=a("",2),d=a("",1),E=s("li",null,"PascalCase (单词首字母大写命名)是最通用的声明约定",-1),g=s("li",null,"kebab-case (短横线分隔命名) 是最通用的使用约定",-1),o=s("li",null,"组件名应该始终是多个单词的，根组件 App 除外",-1),F=s("li",null,"有意义的名词、简短、具有可读性",-1),y=s("li",null,[i("命名遵循 PascalCase 约定 "),s("ul",null,[s("li",null,"公用组件以 El (公司名缩写简称) 开头，如（ElTable）"),s("li",null,"页面内部组件以组件模块名简写为开头，Item 为结尾，如（StaffBenchToChargeItem，StaffBenchAppNotArrItem）")])],-1),c=s("li",null,"导入及注册组件时，遵循 PascalCase 约定",-1),u=s("li",null,"必须符合自定义元素规范: 切勿使用保留字",-1),C=a("",2),B=a("",37);function A(b,D,v,q,m,_){const n=k("el-table");return t(),h("div",null,[r,s("ul",null,[d,s("li",null,[i("Vue组件(官方文档推荐及使用遵循规则) "),s("ul",null,[E,g,o,F,y,s("li",null,[i("使用遵循 kebab-case 约定 "),s("ul",null,[s("li",null,[i("在页面中使用组件需要前后闭合，并以短线分隔，如（"),p(n),i("）")])])]),c,u])]),C]),B])}const x=l(e,[["render",A]]);export{S as __pageData,x as default};
